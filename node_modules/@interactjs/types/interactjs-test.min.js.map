{
	"version": 3,
	"sources": [
		"interactjs-test.ts"
	],
	"names": [
		"interact",
		"document",
		"body",
		"window",
		"draggable",
		"inertia",
		"modifiers",
		"snap",
		"targets",
		"x",
		"y",
		"snappers",
		"grid",
		"offset",
		"relativePoints",
		"endOnly",
		"snapSize",
		"width",
		"height",
		"restrictRect",
		"restriction",
		"restrict",
		"_",
		"top",
		"left",
		"bottom",
		"right",
		"restrictSize",
		"min",
		"max",
		"restrictEdges",
		"inner",
		"outer",
		"resizable",
		"context",
		"querySelector",
		"maxPerElement",
		"manualStart",
		"autoScroll",
		"lockAxis",
		"startAxis",
		"margin",
		"square",
		"axis",
		"gesturable",
		"container",
		"distance",
		"interval",
		"listener",
		"event",
		"type",
		"pageX",
		"pageY",
		"alert",
		"edges",
		"invert",
		"squareResize",
		"dropzone",
		"accept",
		"overlap",
		"checker",
		"_dragEvent",
		"_event",
		"dropped",
		"_dropzone",
		"dropElement",
		"_draggable",
		"_draggableElement",
		"hasChildNodes",
		"dynamicDrop",
		"on",
		"gesturestart",
		"gestureend",
		"rect",
		"deltaRect",
		"JSON",
		"stringify",
		"listeners",
		"start",
		"move",
		"end",
		"onstart",
		"onmove",
		"onend",
		"devTools",
		"ignore",
		"boxSizing",
		"touchAction",
		"ondrop",
		"relatedTarget",
		"id",
		"target",
		"classList",
		"add",
		"location",
		"href",
		"currentTarget",
		"preventDefault"
	],
	"mappings": "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",
	"sourcesContent": [
		"// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs/index'\n\n// Interactables\ninteract(document.body)\ninteract(document)\ninteract(window)\n\ninteract('.drag-and-resize')\n  .draggable({\n    inertia: true,\n    modifiers: [\n      interact.modifiers.snap({\n        targets: [\n          { x: 100, y: 200 },\n          (x: number, y: number) => ({ x: x % 20, y }),\n          interact.snappers.grid({ x: 20, y: 0 }),\n        ],\n        offset: 'startCoords',\n        relativePoints: [{ x: 0, y: 1 }],\n        endOnly: true,\n      }),\n      interact.modifiers.snapSize({\n        targets: [\n          { x: 100, y: 200 },\n          (x: number, y: number) => ({ x: x % 20, y }),\n          interact.snappers.grid({ width: 100, height: 500 }),\n        ],\n        endOnly: true,\n      }),\n      interact.modifiers.restrictRect({\n        restriction: 'parent',\n        endOnly: true,\n      }),\n      interact.modifiers.restrict({\n        restriction: _ => ({ top: 0, left: 0, bottom: 1, right: 1 }),\n      }),\n      interact.modifiers.restrict({\n        restriction: _ => document.body,\n      }),\n      interact.modifiers.restrictSize({\n        min: document.body,\n        max: 'parent',\n      }),\n      interact.modifiers.restrictEdges({\n        inner: document.body,\n        outer: 'parent',\n      }),\n    ],\n  })\n  .resizable({\n    inertia: true,\n  })\n\n// Selector context\nconst myList: HTMLElement | SVGElement = document.querySelector('#my-list')\n\ninteract('li', {\n  context: myList,\n})\n  .draggable({ /* ... */ })\n\n// Action options\nconst target = 'li'\ninteract(target)\n  .draggable({\n    max          : 1,\n    maxPerElement: 2,\n    manualStart  : true,\n    modifiers    : [],\n    inertia      : {/* ... */},\n    autoScroll   : {/* ... */},\n\n    lockAxis     : 'x' || 'y' || 'start',\n    startAxis    : 'x' || 'y',\n  })\n  .resizable({\n    max          : 1,\n    maxPerElement: 2,\n    manualStart  : true,\n    modifiers    : [],\n    inertia      : {/* ... */},\n    autoScroll   : {/* ... */},\n    margin       : 50,\n\n    square       : true || false,\n    axis         : 'x' || 'y',\n  })\n  .gesturable({\n    max          : 1,\n    maxPerElement: 2,\n    manualStart  : true,\n    modifiers    : [],\n  })\n\n// autoscroll\nconst element = 'li'\ninteract(element)\n  .draggable({\n    autoScroll: true,\n  })\n  .resizable({\n    autoScroll: {\n      container: document.body,\n      margin: 50,\n      distance: 5,\n      interval: 10,\n    },\n  })\n\n// axis\ninteract(target).draggable({\n  startAxis: 'x',\n  lockAxis: 'y',\n}).draggable({\n  startAxis: 'xy',\n  lockAxis: 'x',\n})\n\ninteract(target).resizable({\n  axis: 'x',\n})\n\nconst handleEl = 'li'\ninteract(target).resizable({\n  edges: {\n    top   : true,       // Use pointer coords to check for resize.\n    left  : false,      // Disable resizing from left edge.\n    bottom: '.resize-s', // Resize if pointer target matches selector\n    right : handleEl,    // Resize if pointer target is the given Element\n  },\n})\n\n// resize invert\ninteract(target).resizable({\n  edges: { bottom: true, right: true },\n  invert: 'reposition',\n})\n\n// resize square\ninteract(target).resizable({\n  squareResize: true,\n})\n\n// dropzone  accept\ninteract(target).dropzone({\n  accept: '.drag0, .drag1',\n})\n\n// dropzone overlap\ninteract(target).dropzone({\n  overlap: 0.25,\n})\n\n// dropzone checker\ninteract(target).dropzone({\n  checker (\n    _dragEvent: Interact.Element,           // related dragmove or dragend\n    _event: Event,                          // Touch, Pointer or Mouse Event\n    dropped: boolean,                       // bool default checker result\n    _dropzone: Interact.Interactable,       // dropzone Interactable\n    dropElement: Interact.Element,          // dropzone elemnt\n    _draggable: Interact.Interactable,      // draggable Interactable\n    _draggableElement: Interact.Element) {  // draggable element\n    // only allow drops into empty dropzone elements\n    return dropped && !dropElement.hasChildNodes()\n  },\n})\n\ninteract.dynamicDrop()\ninteract.dynamicDrop(false)\n\n// Events\nfunction listener (event) {\n  const { type, pageX, pageY } = event\n  alert({ type, pageX, pageY })\n}\n\ninteract(target)\n  .on('dragstart', listener)\n  .on('dragmove dragend', listener)\n  .on(['resizemove', 'resizeend'], listener)\n  .on({\n    gesturestart: listener,\n    gestureend: listener,\n  })\n\ninteract.on('resize', (event: Interact.ResizeEvent) => {\n  const { rect, deltaRect } = event\n  alert(JSON.stringify({ rect, deltaRect }))\n})\n\ninteract(target).resizable({\n  listeners: [\n    { start: listener, move: listener },\n  ],\n})\n\ninteract(target).draggable({\n  listeners: { start: listener, end: listener },\n})\n\ninteract(target).draggable({\n  onstart: listener,\n  onmove: listener,\n  onend: listener,\n})\n\ninteract.on(['dragmove', 'resizestart'], listener)\n\n// devTools options\ninteract(target).devTools({\n  ignore: { boxSizing: true, touchAction: true },\n})\n\nconst dropTarget = 'div'\n// Drop Events\ninteract(dropTarget)\n  .dropzone({\n    ondrop (event) {\n      alert(event.relatedTarget.id +\n            ' was dropped into ' +\n            event.target.id)\n    },\n  })\n  .on('dropactivate', event => {\n    event.target.classList.add('drop-activated')\n  })\n\ninteract(target).on('up', _event => {})\n\n// fast click\ninteract('a[href]').on('tap', event => {\n  window.location.href = event.currentTarget.href\n\n  event.preventDefault()\n})\n"
	]
}